name: Automated tests
on:
  pull_request:
    branches:
    - main
  push:
    branches:
    - main
  workflow_dispatch:

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Setup Python
      uses: actions/setup-python@v2
    - name: Cache pre-commit envs
      uses: actions/cache@v2
      with:
        path: ~/.cache/pre-commit
        key: ${{ runner.os }}-pre-commit-${{ hashFiles('.pre-commit-config.yaml') }}
    - name: Run pre-commit to lint files
      run: |
        pip install pre-commit
        pre-commit run --all-files

  build-images:
    name: Build images
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - image: openverse_api
            context: openverse_api
            file: Dockerfile
          - image: ingestion_server
            context: ingestion_server
            file: Dockerfile
          - image: indexer_worker
            context: ingestion_server
            file: Dockerfile
          - image: analytics
            context: analytics
            file: Dockerfile
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v1
      with:
        install: true

    - name: Build image ${{ matrix.image }}
      uses: docker/build-push-action@v2
      with:
        context: ${{ matrix.context }}
        file: ${{ matrix.context }}/${{ matrix.file }}
        push: false
        tags: ${{ matrix.image }}
        cache-from: type=gha,scope=${{ matrix.image }}
        cache-to: type=gha,scope=${{ matrix.image }}
        outputs: type=docker,dest=/tmp/${{ matrix.image }}.tar

    - name: Upload artifact ${{ matrix.image }}
      uses: actions/upload-artifact@v2
      with:
        name: ${{ matrix.image }}
        path: /tmp/${{ matrix.image }}.tar

  test-ing:
    name: Run tests for ingestion-server
    runs-on: ubuntu-latest
    timeout-minutes: 15
    needs:
      - build-images
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Setup just
      uses: extractions/setup-just@v1
    - name: Setup Python
      uses: actions/setup-python@v2
      with:
        python-version: "3.9"
    - name: Cache Python dependencies
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/Pipfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v1
      with:
        install: true
    - name: Install Python deps for ingestion-server
      run: |
        pip install -U pip
        pip install pipenv
        just _ing-install
    - name: Download image `ingestion_server`
      uses: actions/download-artifact@v2
      with:
        name: ingestion_server
        path: /tmp
    - name: Load image `ingestion_server`
      run: docker load --input /tmp/ingestion_server.tar
    - name: Run ingestion-server tests
      run: just ing-testlocal

  test-api:
    name: Run tests for the API
    runs-on: ubuntu-latest
    timeout-minutes: 15
    needs:
      - build-images
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Setup just
      uses: extractions/setup-just@v1

    - name: Download image `openverse_api`
      uses: actions/download-artifact@v2
      with:
        name: web
        path: /tmp
    - name: Load image `openverse_api`
      run: docker load --input /tmp/openverse_api.tar

    - name: Download image `ingestion_server`
      uses: actions/download-artifact@v2
      with:
        name: ingestion_server
        path: /tmp
    - name: Load image `ingestion_server`
      run: docker load --input /tmp/ingestion_server.tar

    - name: Download image `indexer_worker`
      uses: actions/download-artifact@v2
      with:
        name: indexer_worker
        path: /tmp
    - name: Load image `indexer_worker`
      run: docker load --input /tmp/indexer_worker.tar

    - name: Download image `analytics`
      uses: actions/download-artifact@v2
      with:
        name: analytics
        path: /tmp
    - name: Load image `analytics`
      run: docker load --input /tmp/analytics.tar

    - name: Start API, ingest and index test data
      run: just init
    - name: Run API tests
      run: just api-test -T
    - name: Run analytics tests
      run: just nl-test -T
